name: Deploy to ECR


on: 
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-lastest 

    steps:
    
       - name: Checkout code
      uses: actions/checkout@v3


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # AWS_SESSION_TOKEN is missing here, assuming it's needed for temporary credentials
        AWS_REGION: us-east-1

    - name: Build and push mysql image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835_mysql
        IMAGE_TAG: v1.0
      rum: |
        cd Assignment1/
        ls -ltra
        
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_msql .
        
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Build, tag, and push app image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835_webapp
        IMAGE_TAG: v1.0
      run: |
        cd Assignment1/ 
        ls -ltra
        # Docker build, missing the context `.` at the end of the command
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile
        # Docker push, correct, but relies on the above potentially failed step
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
